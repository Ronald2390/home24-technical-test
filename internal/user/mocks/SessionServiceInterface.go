// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "home24-technical-test/internal/user/model"

	mock "github.com/stretchr/testify/mock"
)

// SessionServiceInterface is an autogenerated mock type for the SessionServiceInterface type
type SessionServiceInterface struct {
	mock.Mock
}

// CreateSession provides a mock function with given fields: ctx, _a1, loginToken
func (_m *SessionServiceInterface) CreateSession(ctx context.Context, _a1 *model.User, loginToken string) error {
	ret := _m.Called(ctx, _a1, loginToken)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.User, string) error); ok {
		r0 = rf(ctx, _a1, loginToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteSession provides a mock function with given fields: ctx, userID
func (_m *SessionServiceInterface) DeleteSession(ctx context.Context, userID int) error {
	ret := _m.Called(ctx, userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExtendingSessionTimeout provides a mock function with given fields: ctx, token
func (_m *SessionServiceInterface) ExtendingSessionTimeout(ctx context.Context, token string) (*model.Session, error) {
	ret := _m.Called(ctx, token)

	var r0 *model.Session
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.Session); ok {
		r0 = rf(ctx, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSession provides a mock function with given fields: ctx, token
func (_m *SessionServiceInterface) GetSession(ctx context.Context, token string) (*model.Session, error) {
	ret := _m.Called(ctx, token)

	var r0 *model.Session
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.Session); ok {
		r0 = rf(ctx, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveSession provides a mock function with given fields: ctx, token
func (_m *SessionServiceInterface) RemoveSession(ctx context.Context, token string) error {
	ret := _m.Called(ctx, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateSession provides a mock function with given fields: ctx, _a1
func (_m *SessionServiceInterface) UpdateSession(ctx context.Context, _a1 *model.User) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.User) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
