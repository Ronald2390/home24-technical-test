// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "home24-technical-test/internal/user/model"

	mock "github.com/stretchr/testify/mock"
)

// SessionStorage is an autogenerated mock type for the SessionStorage type
type SessionStorage struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, token, sessType
func (_m *SessionStorage) Delete(ctx context.Context, token string, sessType string) error {
	ret := _m.Called(ctx, token, sessType)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, token, sessType)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteByUserID provides a mock function with given fields: ctx, userID
func (_m *SessionStorage) DeleteByUserID(ctx context.Context, userID int) error {
	ret := _m.Called(ctx, userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByTokenAndType provides a mock function with given fields: ctx, token, sessType
func (_m *SessionStorage) FindByTokenAndType(ctx context.Context, token string, sessType string) (*model.Session, error) {
	ret := _m.Called(ctx, token, sessType)

	var r0 *model.Session
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *model.Session); ok {
		r0 = rf(ctx, token, sessType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, token, sessType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: ctx, session
func (_m *SessionStorage) Insert(ctx context.Context, session *model.Session) error {
	ret := _m.Called(ctx, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Session) error); ok {
		r0 = rf(ctx, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: ctx, session
func (_m *SessionStorage) Update(ctx context.Context, session *model.Session) error {
	ret := _m.Called(ctx, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Session) error); ok {
		r0 = rf(ctx, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateByUserID provides a mock function with given fields: ctx, session
func (_m *SessionStorage) UpdateByUserID(ctx context.Context, session *model.Session) error {
	ret := _m.Called(ctx, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Session) error); ok {
		r0 = rf(ctx, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
